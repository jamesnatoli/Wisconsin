#define stitchStudy_cxx
#include "stitchStudy.h"
#include <TH2.h>
#include <TStyle.h>
#include <TCanvas.h>

#include "utils.C"

void stitchStudy::Loop() {
  if (fChain == 0) return;
  
  Long64_t nentries = fChain->GetEntriesFast();
  if (nentries == TTree::kMaxEntries)
    nentries = fChain->GetEntries();

  // Histogram Parking
  
  std::cout << ">>> Looping " << nentries << " Events" << std::endl;
  std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now();
  Long64_t nbytes = 0, nb = 0;
  for (Long64_t jentry=0; jentry<nentries;jentry++) {
    progressBar( jentry, nentries, start);
    Long64_t ientry = LoadTree(jentry);
    if (ientry < 0) break;
    nb = fChain->GetEntry(jentry);   nbytes += nb;
    
    //
    
  }
}
